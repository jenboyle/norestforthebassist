/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.4
 * Generated at: 2021-05-03 16:30:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class improvise_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<link href=\"resources/css/main.css\" rel=\"stylesheet\">\n");
      out.write("<script src=\"resources/js/improvise.js\"></script>\n");
      out.write("<title>No Rest For The Bassist</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<form action=\"playalong.jsp\">\n");
      out.write("  <!--  <input type=\"hidden\" name=\"improvise_scale\" />-->\n");
      out.write("  <input type=\"hidden\" name=\"title\" value=\"C Major Scale\" />\n");
      out.write("  <input type=\"hidden\" name=\"id\" value=\"1\" />\n");
      out.write("  \n");
      out.write("    <h1>No Rest For The Bassist</h1>\n");
      out.write("    <table>\n");
      out.write("        <tr>\n");
      out.write("            <td style = \"width: 160px;\">\n");
      out.write("                ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "sidebar.html", out, true);
      out.write("\n");
      out.write("            </td>\n");
      out.write("            <td style = \"vertical-align: top\" colspan=\"2\">\n");
      out.write("                <h2>Improvise Play Along</h2>\n");
      out.write("            </td>\n");
      out.write("            </tr>\n");
      out.write("            <tr>\n");
      out.write("                <td/>\n");
      out.write("                <td>Scale:</td>\n");
      out.write("                <td>\n");
      out.write("                <select name=\"improvise_scale\" id=\"improvise_scale\">\n");
      out.write("                    <option value=\"cmajor\" selected>C major</option>\n");
      out.write("  \t\t\t\t\t<option value=\"dmajor\">D major</option>\n");
      out.write("  \t\t\t\t\t<option value=\"emajor\">E major</option>\n");
      out.write("  \t\t\t\t\t<option value=\"fmajor\">F major</option>\n");
      out.write("  \t\t\t\t\t<option value=\"gmajor\">G major</option>\n");
      out.write("  \t\t\t\t\t<option value=\"amajor\">A major</option>\n");
      out.write("  \t\t\t\t\t<option value=\"bmajor\">B major</option>\n");
      out.write("\t\t\t\t</select>\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t    <td/>\n");
      out.write("\t\t\t    <td>Chord Progression Pattern:</td>\n");
      out.write("\t\t\t\t<td>\n");
      out.write("\t\t\t\t<select name=\"improvise_pattern\" id=\"improvise_pattern\">\n");
      out.write("                    <option value=\"1|4|5\" selected>1 4 5</option>\n");
      out.write("  \t\t\t\t\t<option value=\"1|5|6|4\">1 5 6 4</option>\n");
      out.write("  \t\t\t\t\t<option value=\"2|5|1\">2 5 1</option>\n");
      out.write("\t\t\t\t</select>\n");
      out.write("            </td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("\t\t\t    <td/>\n");
      out.write("\t\t\t    <td>Drum Selection:</td>\n");
      out.write("\t\t\t\t<td>\n");
      out.write("\t\t\t\t<select name=\"improvise_drum\" id=\"improvise_drum\">\n");
      out.write("                    <option value=\"pop1_70bpm.mp3\" selected>Pop Track 1 (70 bpm)</option>\n");
      out.write("  \t\t\t\t\t<option value=\"pop2_80bpm.mp3\">Pop Track 2 (80 bpm)</option>\n");
      out.write("  \t\t\t\t\t<option value=\"reggae1_90bpm.mp3\">Reggae Track 1 (90 bpm)</option>\n");
      out.write("  \t\t\t\t\t<option value=\"reggae2_95bpm.mp3\">Reggae Track 2 (95 bpm)</option>\n");
      out.write("  \t\t\t\t\t<option value=\"rnb1_90bpm.mp3\">R&B Track 1 (90 bpm)</option>\n");
      out.write("  \t\t\t\t\t<option value=\"rock2_100bpm.mp3\">Rock Track 1 (100 bpm)</option>\n");
      out.write("\t\t\t\t</select>\n");
      out.write("            </td>\n");
      out.write("        </tr>\n");
      out.write("        <tr>\n");
      out.write("        <td/>\n");
      out.write("        <td>\n");
      out.write("          <input type = \"submit\" value = \"Play Along\" />\n");
      out.write("        </td>\n");
      out.write("        </tr>\n");
      out.write("    </table>\n");
      out.write("    </form>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
